name: Test rubot

on:
  push:
    branches: [main, docling]  # Add docling branch
  pull_request:
    branches: [main, docling]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # Install system dependencies for Docling
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr tesseract-ocr-deu libgl1-mesa-glx
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e ".[dev]"
      
      - name: Lint with flake8
        run: |
          flake8 rubot/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 rubot/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      
      - name: Type check with mypy
        run: |
          mypy rubot/ --ignore-missing-imports
      
      - name: Test with pytest
        run: |
          pytest tests/test_simple.py tests/test_models.py tests/test_retry.py tests/test_docling_converter.py tests/test_config.py tests/test_cli.py tests/test_integration.py -v --cov=rubot --cov-report=xml
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          DEFAULT_MODEL: "moonshotai/kimi-k2:free"
          PYTHONWARNINGS: "ignore::UserWarning"
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella