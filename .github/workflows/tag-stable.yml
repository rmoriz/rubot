name: Tag Docker Image as Stable

on:
  workflow_dispatch:
    inputs:
      source_tag:
        description: 'Source Docker image tag to tag as stable'
        required: true
        type: string
        default: 'latest'
      registry:
        description: 'Container registry'
        required: true
        type: choice
        options:
          - 'ghcr.io'
          - 'docker.io'
        default: 'ghcr.io'
      dry_run:
        description: 'Dry run (show what would be done without making changes)'
        required: false
        type: boolean
        default: false

env:
  IMAGE_NAME: rmoriz/rubot
  STABLE_TAG: stable

jobs:
  tag-stable:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ github.event.inputs.registry }}
          username: ${{ github.event.inputs.registry == 'ghcr.io' && github.actor || secrets.DOCKER_USERNAME }}
          password: ${{ github.event.inputs.registry == 'ghcr.io' && secrets.GITHUB_TOKEN || secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        run: |
          SOURCE_IMAGE="${{ github.event.inputs.registry }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.source_tag }}"
          TARGET_IMAGE="${{ github.event.inputs.registry }}/${{ env.IMAGE_NAME }}:${{ env.STABLE_TAG }}"
          
          echo "source_image=$SOURCE_IMAGE" >> $GITHUB_OUTPUT
          echo "target_image=$TARGET_IMAGE" >> $GITHUB_OUTPUT
          
          echo "üìã Configuration:"
          echo "   Source: $SOURCE_IMAGE"
          echo "   Target: $TARGET_IMAGE"
          echo "   Registry: ${{ github.event.inputs.registry }}"
          echo "   Dry run: ${{ github.event.inputs.dry_run }}"
          
      - name: Verify source image exists
        run: |
          SOURCE_IMAGE="${{ steps.meta.outputs.source_image }}"
          echo "üîç Verifying source image exists: $SOURCE_IMAGE"
          
          if docker manifest inspect "$SOURCE_IMAGE" > /dev/null 2>&1; then
            echo "‚úÖ Source image exists"
          else
            echo "‚ùå Source image not found: $SOURCE_IMAGE"
            exit 1
          fi
          
      - name: Pull source image
        if: ${{ github.event.inputs.dry_run == 'false' }}
        run: |
          docker pull "${{ steps.meta.outputs.source_image }}"
          
      - name: Tag image as stable
        if: ${{ github.event.inputs.dry_run == 'false' }}
        run: |
          SOURCE_IMAGE="${{ steps.meta.outputs.source_image }}"
          TARGET_IMAGE="${{ steps.meta.outputs.target_image }}"
          
          echo "üè∑Ô∏è Tagging $SOURCE_IMAGE as $TARGET_IMAGE"
          docker tag "$SOURCE_IMAGE" "$TARGET_IMAGE"
          
      - name: Push stable tag
        if: ${{ github.event.inputs.dry_run == 'false' }}
        run: |
          TARGET_IMAGE="${{ steps.meta.outputs.target_image }}"
          echo "üì§ Pushing $TARGET_IMAGE"
          docker push "$TARGET_IMAGE"
          
      - name: Summary
        run: |
          echo "üéØ Workflow Summary:"
          echo "   Source: ${{ steps.meta.outputs.source_image }}"
          echo "   Target: ${{ steps.meta.outputs.target_image }}"
          echo "   Registry: ${{ github.event.inputs.registry }}"
          echo "   Dry run: ${{ github.event.inputs.dry_run }}"
          
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "‚ú® This was a dry run - no changes were made"
          else
            echo "‚úÖ Successfully tagged image as stable"
          fi
